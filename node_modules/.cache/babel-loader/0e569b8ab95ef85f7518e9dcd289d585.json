{"ast":null,"code":"import _slicedToArray from\"/home/david-bernal/Documentos/ReacTalk/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import*as React from\"react\";import{useState}from\"react\";import DataManager from\"./DataManager\";/**\n * Componente para el formulario de inicio de sesión.\n * Está compuesto de dos áreas de texto y un botón.\n * Cuando se presione el botón se realizará un intento de inicio de sesión:\n *  -Se recogerán los datos de los campos de texto.\n *  -Se contrastarán con los usuarios guardados.\n *      >Si el usuario no existe: Error.\n *      >Si el usuario existe pero está online: Error:\n *      >Si el usuario existe y está offline: Iniciar sesión.\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function LoginForm(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),userName=_useState2[0],setUserName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),pwd=_useState4[0],setPwd=_useState4[1];function tryLogin(){// Comparamos los datos introducidos con los datos en el archivo\nif(DataManager.checkCredentials(userName.toLowerCase(),pwd)){// Inicio de sesión correcto:\n// Actualizamos el valor de userAuth y cambiamos el estado del usuario a \"online\"\nprops.userSetter(userName);props.authUpdater(true);DataManager.logIn(userName);}}var performValidation=function performValidation(){return userName.length>0&&pwd.length>0;};var handleUserChange=function handleUserChange(event){setUserName(event.target.value);};var handlePwdChange=function handlePwdChange(event){setPwd(event.target.value);};return/*#__PURE__*/_jsxs(\"div\",{className:\"Login-form\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"sup\",{children:\"React\"}),\"Talk\"]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:tryLogin,children:[/*#__PURE__*/_jsx(\"label\",{children:\"User \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",onChange:handleUserChange,value:userName}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Password \"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",onChange:handlePwdChange,value:pwd}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{className:\"login-button\",type:\"submit\",value:\"Log in\",disabled:!performValidation()})]})]});}","map":{"version":3,"sources":["/home/david-bernal/Documentos/ReacTalk/src/components/LoginForm.tsx"],"names":["React","useState","DataManager","LoginForm","props","userName","setUserName","pwd","setPwd","tryLogin","checkCredentials","toLowerCase","userSetter","authUpdater","logIn","performValidation","length","handleUserChange","event","target","value","handlePwdChange"],"mappings":"4HAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G,wFACA,cAAe,SAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA+B,CAC5C,cAAgCH,QAAQ,CAAC,EAAD,CAAxC,wCAAOI,QAAP,eAAiBC,WAAjB,eACA,eAAsBL,QAAQ,CAAC,EAAD,CAA9B,yCAAOM,GAAP,eAAYC,MAAZ,eAEA,QAASC,CAAAA,QAAT,EAAoB,CAClB;AACA,GAAIP,WAAW,CAACQ,gBAAZ,CAA6BL,QAAQ,CAACM,WAAT,EAA7B,CAAqDJ,GAArD,CAAJ,CAA+D,CAC7D;AACA;AACAH,KAAK,CAACQ,UAAN,CAAiBP,QAAjB,EACAD,KAAK,CAACS,WAAN,CAAkB,IAAlB,EAEAX,WAAW,CAACY,KAAZ,CAAkBT,QAAlB,EACD,CACF,CAED,GAAMU,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,MAAOV,CAAAA,QAAQ,CAACW,MAAT,CAAkB,CAAlB,EAAuBT,GAAG,CAACS,MAAJ,CAAa,CAA3C,CACD,CAFD,CAIA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAgB,CACvCZ,WAAW,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX,CACD,CAFD,CAIA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACH,KAAD,CAAgB,CACtCV,MAAM,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAN,CACD,CAFD,CAIA,mBACE,aAAK,SAAS,CAAC,YAAf,wBACE,mCACE,8BADF,UADF,cAIE,cAAM,QAAQ,CAAEX,QAAhB,wBACE,gCADF,cAEE,cAAO,IAAI,CAAC,MAAZ,CAAmB,QAAQ,CAAEQ,gBAA7B,CAA+C,KAAK,CAAEZ,QAAtD,EAFF,cAGE,aAHF,cAIE,oCAJF,cAKE,cAAO,IAAI,CAAC,UAAZ,CAAuB,QAAQ,CAAEgB,eAAjC,CAAkD,KAAK,CAAEd,GAAzD,EALF,cAME,aANF,cAOE,cACE,SAAS,CAAC,cADZ,CAEE,IAAI,CAAC,QAFP,CAGE,KAAK,CAAC,QAHR,CAIE,QAAQ,CAAE,CAACQ,iBAAiB,EAJ9B,EAPF,GAJF,GADF,CAqBD","sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport DataManager from \"./DataManager\";\n/**\n * Componente para el formulario de inicio de sesión.\n * Está compuesto de dos áreas de texto y un botón.\n * Cuando se presione el botón se realizará un intento de inicio de sesión:\n *  -Se recogerán los datos de los campos de texto.\n *  -Se contrastarán con los usuarios guardados.\n *      >Si el usuario no existe: Error.\n *      >Si el usuario existe pero está online: Error:\n *      >Si el usuario existe y está offline: Iniciar sesión.\n */\nexport default function LoginForm(props: any) {\n  const [userName, setUserName] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n\n  function tryLogin() {\n    // Comparamos los datos introducidos con los datos en el archivo\n    if (DataManager.checkCredentials(userName.toLowerCase(), pwd)) {\n      // Inicio de sesión correcto:\n      // Actualizamos el valor de userAuth y cambiamos el estado del usuario a \"online\"\n      props.userSetter(userName);\n      props.authUpdater(true);\n\n      DataManager.logIn(userName);\n    }\n  }\n\n  const performValidation = () => {\n    return userName.length > 0 && pwd.length > 0;\n  };\n\n  const handleUserChange = (event: any) => {\n    setUserName(event.target.value);\n  };\n\n  const handlePwdChange = (event: any) => {\n    setPwd(event.target.value);\n  };\n\n  return (\n    <div className=\"Login-form\">\n      <h1>\n        <sup>React</sup>Talk\n      </h1>\n      <form onSubmit={tryLogin}>\n        <label>User </label>\n        <input type=\"text\" onChange={handleUserChange} value={userName} />\n        <br />\n        <label>Password </label>\n        <input type=\"password\" onChange={handlePwdChange} value={pwd} />\n        <br />\n        <input\n          className=\"login-button\"\n          type=\"submit\"\n          value=\"Log in\"\n          disabled={!performValidation()}\n        />\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}