{"ast":null,"code":"/* eslint-disable array-callback-return */\n\n/**\n * Clase para leer y escribir datos en los archivos de usuario.\n */\nexport default class DataManager {\n  /**\n   * Comprueba que una pareja de datos usuario-contrase침a exista\n   * y sea v치lida.\n   * @param user\n   * @param pwd\n   */\n  static checkCredentials(user, pwd) {\n    let valid = false;\n    this.data.forEach(u => {\n      if (u[0].toLowerCase() === user.toLowerCase() && u[1] === pwd) {\n        valid = true;\n        return;\n      }\n    });\n    return valid;\n  }\n  /**\n   * Devuelve un array con todos los amigos y sus estados.\n   *\n   * @param userName\n   */\n\n\n  static getFriends(userName) {\n    return this.data.map(user => {\n      // Si encontramos el usuario\n      if (user[0] === userName) {\n        // Extraemos sus amigos\n        let friends = Array(0);\n        user[3].split(\",\").map(friend => {\n          this.data.map(u => {\n            if (u[0].toLowerCase() === friend) {\n              friends.push({\n                name: friend[0].toUpperCase() + friend.substring(1),\n                status: u[2]\n              });\n              return;\n            }\n          });\n        });\n        return friends;\n      }\n    }).filter(e => {\n      return e != null;\n    })[0];\n  }\n\n  static logIn(userName) {\n    this.data.map(user => {\n      if (user[0].toLowerCase() === userName.toLowerCase()) {\n        user[2] = \"online\";\n        return;\n      }\n    });\n  }\n  /**\n   * Carga todos los datos disponibles\n   */\n  // static loadAll() {\n  //     let temp = new Array(0)\n  //     fs.readFileSync('../data/users.txt', 'utf-8')\n  //     .split(\"\\n\")\n  //     .map((line:any) => {\n  //         temp.push(line.split(\";\"))\n  //     })\n  //     console.log(temp)\n  //     return temp\n  // }\n\n\n}\nDataManager.data = [[\"Delmer\", \"delm3r\", \"offline\", \"candelario,leo,cisco\"], [\"Candelario\", \"c4ndel\", \"online\", \"delmer,leo\"], [\"Leo\", \"le0\", \"offline\", \"delmer,candelario,cisco\"], [\"Cisco\", \"c1sc0\", \"online\", \"decmer,leo,amadeo\"], [\"Amadeo\", \"4m4deo\", \"online\", \"cisco\"]];\nconsole.log(DataManager.getFriends(\"Delmer\"));","map":{"version":3,"sources":["/home/david-bernal/Documentos/ReacTalk/src/components/DataManager.tsx"],"names":["DataManager","checkCredentials","user","pwd","valid","data","forEach","u","toLowerCase","getFriends","userName","map","friends","Array","split","friend","push","name","toUpperCase","substring","status","filter","e","logIn","console","log"],"mappings":"AAAA;;AACA;AACA;AACA;AACA,eAAe,MAAMA,WAAN,CAAkB;AAS/B;AACF;AACA;AACA;AACA;AACA;AACyB,SAAhBC,gBAAgB,CAACC,IAAD,EAAeC,GAAf,EAA4B;AACjD,QAAIC,KAAK,GAAG,KAAZ;AAEA,SAAKC,IAAL,CAAUC,OAAV,CAAmBC,CAAD,IAAO;AACvB,UAAIA,CAAC,CAAC,CAAD,CAAD,CAAKC,WAAL,OAAuBN,IAAI,CAACM,WAAL,EAAvB,IAA6CD,CAAC,CAAC,CAAD,CAAD,KAASJ,GAA1D,EAA+D;AAC7DC,QAAAA,KAAK,GAAG,IAAR;AACA;AACD;AACF,KALD;AAOA,WAAOA,KAAP;AACD;AAED;AACF;AACA;AACA;AACA;;;AACmB,SAAVK,UAAU,CAACC,QAAD,EAAmB;AAClC,WAAO,KAAKL,IAAL,CACJM,GADI,CACCT,IAAD,IAAU;AACb;AACA,UAAIA,IAAI,CAAC,CAAD,CAAJ,KAAYQ,QAAhB,EAA0B;AACxB;AACA,YAAIE,OAAO,GAAGC,KAAK,CAAC,CAAD,CAAnB;AACAX,QAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQY,KAAR,CAAc,GAAd,EAAmBH,GAAnB,CAAwBI,MAAD,IAAoB;AACzC,eAAKV,IAAL,CAAUM,GAAV,CAAeJ,CAAD,IAAO;AACnB,gBAAIA,CAAC,CAAC,CAAD,CAAD,CAAKC,WAAL,OAAuBO,MAA3B,EAAmC;AACjCH,cAAAA,OAAO,CAACI,IAAR,CAAa;AACXC,gBAAAA,IAAI,EAAEF,MAAM,CAAC,CAAD,CAAN,CAAUG,WAAV,KAA0BH,MAAM,CAACI,SAAP,CAAiB,CAAjB,CADrB;AAEXC,gBAAAA,MAAM,EAAEb,CAAC,CAAC,CAAD;AAFE,eAAb;AAIA;AACD;AACF,WARD;AASD,SAVD;AAWA,eAAOK,OAAP;AACD;AACF,KAnBI,EAoBJS,MApBI,CAoBIC,CAAD,IAAO;AACb,aAAOA,CAAC,IAAI,IAAZ;AACD,KAtBI,EAsBF,CAtBE,CAAP;AAuBD;;AAEW,SAALC,KAAK,CAACb,QAAD,EAAmB;AAC7B,SAAKL,IAAL,CAAUM,GAAV,CAAeT,IAAD,IAAU;AACtB,UAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQM,WAAR,OAA0BE,QAAQ,CAACF,WAAT,EAA9B,EAAsD;AACpDN,QAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,QAAV;AACA;AACD;AACF,KALD;AAMD;AAED;AACF;AACA;AACE;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;AAnF+B;AAAZF,W,CACZK,I,GAA6B,CAClC,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,sBAAhC,CADkC,EAElC,CAAC,YAAD,EAAe,QAAf,EAAyB,QAAzB,EAAmC,YAAnC,CAFkC,EAGlC,CAAC,KAAD,EAAQ,KAAR,EAAe,SAAf,EAA0B,yBAA1B,CAHkC,EAIlC,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,EAA6B,mBAA7B,CAJkC,EAKlC,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,OAA/B,CALkC,C;AAqFtCmB,OAAO,CAACC,GAAR,CAAYzB,WAAW,CAACS,UAAZ,CAAuB,QAAvB,CAAZ","sourcesContent":["/* eslint-disable array-callback-return */\n/**\n * Clase para leer y escribir datos en los archivos de usuario.\n */\nexport default class DataManager {\n  static data: Array<Array<string>> = [\n    [\"Delmer\", \"delm3r\", \"offline\", \"candelario,leo,cisco\"],\n    [\"Candelario\", \"c4ndel\", \"online\", \"delmer,leo\"],\n    [\"Leo\", \"le0\", \"offline\", \"delmer,candelario,cisco\"],\n    [\"Cisco\", \"c1sc0\", \"online\", \"decmer,leo,amadeo\"],\n    [\"Amadeo\", \"4m4deo\", \"online\", \"cisco\"],\n  ];\n\n  /**\n   * Comprueba que una pareja de datos usuario-contrase침a exista\n   * y sea v치lida.\n   * @param user\n   * @param pwd\n   */\n  static checkCredentials(user: string, pwd: string) {\n    let valid = false;\n\n    this.data.forEach((u) => {\n      if (u[0].toLowerCase() === user.toLowerCase() && u[1] === pwd) {\n        valid = true;\n        return;\n      }\n    });\n\n    return valid;\n  }\n\n  /**\n   * Devuelve un array con todos los amigos y sus estados.\n   *\n   * @param userName\n   */\n  static getFriends(userName: string) {\n    return this.data\n      .map((user) => {\n        // Si encontramos el usuario\n        if (user[0] === userName) {\n          // Extraemos sus amigos\n          let friends = Array(0);\n          user[3].split(\",\").map((friend: string) => {\n            this.data.map((u) => {\n              if (u[0].toLowerCase() === friend) {\n                friends.push({\n                  name: friend[0].toUpperCase() + friend.substring(1),\n                  status: u[2],\n                });\n                return;\n              }\n            });\n          });\n          return friends;\n        }\n      })\n      .filter((e) => {\n        return e != null;\n      })[0];\n  }\n\n  static logIn(userName: string) {\n    this.data.map((user) => {\n      if (user[0].toLowerCase() === userName.toLowerCase()) {\n        user[2] = \"online\";\n        return;\n      }\n    });\n  }\n\n  /**\n   * Carga todos los datos disponibles\n   */\n  // static loadAll() {\n  //     let temp = new Array(0)\n\n  //     fs.readFileSync('../data/users.txt', 'utf-8')\n  //     .split(\"\\n\")\n  //     .map((line:any) => {\n  //         temp.push(line.split(\";\"))\n  //     })\n\n  //     console.log(temp)\n\n  //     return temp\n  // }\n}\n\nconsole.log(DataManager.getFriends(\"Delmer\"));\n"]},"metadata":{},"sourceType":"module"}