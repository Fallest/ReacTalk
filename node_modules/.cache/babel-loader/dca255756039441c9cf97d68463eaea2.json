{"ast":null,"code":"var _jsxFileName = \"/home/david-bernal/Documentos/LearningTypescript/ReactApps/conversations/src/components/MainPage.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { Component } from 'react';\nimport { useState } from 'react';\nimport LoginDeco from './LoginDeco'; // import '../styles/LoginPage.css'\n\n/**\n * Componente raíz para la página de inicio de sesión.\n * Tiene dos secciones, una para el formulario y otra para el resto de elementos decorativos.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginPage extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login-page\",\n      children: [/*#__PURE__*/_jsxDEV(LoginDeco, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n/**\n * Componente para el formulario de inicio de sesión.\n * Está compuesto de dos áreas de texto y un botón.\n * Cuando se presione el botón se realizará un intento de inicio de sesión:\n *  -Se recogerán los datos de los campos de texto.\n *  -Se contrastarán con los usuarios guardados.\n *      >Si el usuario no existe: Error.\n *      >Si el usuario existe pero está online: Error:\n *      >Si el usuario existe y está offline: Iniciar sesión.\n */\n\n\nfunction LoginForm(props) {\n  _s();\n\n  const [user, setUser] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n\n  const tryLogin = () => {// Comparamos los datos introducidos con los datos en el archivo\n    //if (user === \"admin\" && pwd === \"admin\")\n  };\n\n  const performValidation = () => {\n    return user.length > 0 && pwd.length > 0;\n  };\n\n  const handleUserChange = event => {\n    setUser(event.target.value);\n  };\n\n  const handlePwdChange = event => {\n    setPwd(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: tryLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"User \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleUserChange,\n        value: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: handlePwdChange,\n        value: pwd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Log in\",\n        disabled: !performValidation()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginForm, \"VdVwgvRxVLr1OwtifevSu7GRne0=\");\n\n_c = LoginForm;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/david-bernal/Documentos/LearningTypescript/ReactApps/conversations/src/components/MainPage.tsx"],"names":["React","Component","useState","LoginDeco","LoginPage","render","LoginForm","props","user","setUser","pwd","setPwd","tryLogin","performValidation","length","handleUserChange","event","target","value","handlePwdChange"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;;AAEA;AACA;AACA;AACA;;;;AACA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAC9BI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAR6B;AAYlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,SAASC,SAAT,CAAmBC,KAAnB,EAA+B;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,EAAD,CAA9B;;AAGA,QAAMU,QAAQ,GAAG,MAAM,CACnB;AACA;AAEH,GAJD;;AAMA,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,WAAOL,IAAI,CAACM,MAAL,GAAc,CAAd,IAAmBJ,GAAG,CAACI,MAAJ,GAAa,CAAvC;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAIC,KAAD,IAAgB;AACrCP,IAAAA,OAAO,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAIH,KAAD,IAAgB;AACpCL,IAAAA,MAAM,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAN;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEN,QAAhB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAEG,gBAA7B;AACA,QAAA,KAAK,EAAEP;AADP;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAEW,eAAjC;AACA,QAAA,KAAK,EAAET;AADP;AAAA;AAAA;AAAA;AAAA,cANJ,eAQI;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAoC,QAAA,QAAQ,EAAE,CAACG,iBAAiB;AAAhE;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAtCSP,S;;KAAAA,S;AAwCV,eAAeF,SAAf","sourcesContent":["import * as React from 'react'\nimport { Component } from 'react'\nimport { useState } from 'react';\nimport LoginDeco from './LoginDeco'\n// import '../styles/LoginPage.css'\n\n/**\n * Componente raíz para la página de inicio de sesión.\n * Tiene dos secciones, una para el formulario y otra para el resto de elementos decorativos.\n */\nclass LoginPage extends Component {\n    render() {\n        return (\n            <div className=\"Login-page\">\n                <LoginDeco></LoginDeco>\n                <LoginForm></LoginForm>\n            </div>\n        )\n    }\n}\n\n\n/**\n * Componente para el formulario de inicio de sesión.\n * Está compuesto de dos áreas de texto y un botón.\n * Cuando se presione el botón se realizará un intento de inicio de sesión:\n *  -Se recogerán los datos de los campos de texto.\n *  -Se contrastarán con los usuarios guardados.\n *      >Si el usuario no existe: Error.\n *      >Si el usuario existe pero está online: Error:\n *      >Si el usuario existe y está offline: Iniciar sesión.\n */\n function LoginForm(props: any) {\n    const [user, setUser] = useState(\"\")\n    const [pwd, setPwd] = useState(\"\")\n    \n\n    const tryLogin = () => {\n        // Comparamos los datos introducidos con los datos en el archivo\n        //if (user === \"admin\" && pwd === \"admin\")\n            \n    }\n    \n    const performValidation = () => {\n        return user.length > 0 && pwd.length > 0\n    }\n\n    const handleUserChange = (event: any) => {\n        setUser(event.target.value)\n    }\n\n    const handlePwdChange = (event: any) => {\n        setPwd(event.target.value)\n    }\n\n    return(\n        <div className=\"Login-form\">\n            <form onSubmit={tryLogin}>\n                <label>User </label>\n                <input type=\"text\" onChange={handleUserChange} \n                value={user} />\n                <br />\n                <label>Password </label>\n                <input type=\"password\" onChange={handlePwdChange}\n                value={pwd} />\n                <br />\n                <input type=\"submit\" value=\"Log in\" disabled={!performValidation()}/>\n            </form>\n        </div>\n    )\n}\n\nexport default LoginPage"]},"metadata":{},"sourceType":"module"}