{"ast":null,"code":"/* eslint-disable array-callback-return */\n\n/**\n * Clase para leer y escribir datos en los archivos de usuario.\n */\nexport default class DataManager {\n  /**\n   * Comprueba que una pareja de datos usuario-contrase침a exista\n   * y sea v치lida.\n   * @param user \n   * @param pwd \n   */\n  static checkCredentials(user, pwd) {\n    let valid = false;\n    this.data.forEach(u => {\n      if (u[0].toLowerCase() === user.toLowerCase() && u[1] === pwd) {\n        valid = true;\n        return;\n      }\n    });\n    return valid;\n  }\n  /**\n   * Devuelve un array con todos los amigos y sus estados.\n   * \n   * @param userName \n   */\n\n\n  static getFriends(userName) {\n    return this.data.map(user => {\n      // Si encontramos el usuario\n      if (user[0] === userName) {\n        // Extraemos sus amigos\n        let friends = Array(0);\n        user[3].split(',').map(friend => {\n          this.data.map(u => {\n            if (u[0].toLowerCase() === friend) {\n              friends.push({\n                name: friend,\n                status: u[2]\n              });\n              return;\n            }\n          });\n        });\n        return friends;\n      }\n    }).filter(e => {\n      return e != null;\n    })[0];\n  }\n\n  static logIn(userName) {\n    this.data.map(user => {\n      if (user[0].toLowerCase() === userName.toLowerCase()) {\n        user[2] = \"online\";\n        return;\n      }\n    });\n  }\n  /**\n   * Carga todos los datos disponibles\n   */\n  // static loadAll() {\n  //     let temp = new Array(0)\n  //     fs.readFileSync('../data/users.txt', 'utf-8')\n  //     .split(\"\\n\")\n  //     .map((line:any) => {\n  //         temp.push(line.split(\";\"))\n  //     })\n  //     console.log(temp)\n  //     return temp\n  // }\n\n\n}\nDataManager.data = [['Delmer', 'delm3r', 'offline', 'candelario,leo,cisco'], ['Candelario', 'c4ndel', 'online', 'delmer,leo'], ['Leo', 'le0', 'offline', 'delmer,candelario,cisco'], ['Cisco', 'c1sc0', 'offline', 'decmer,leo,amadeo'], ['Amadeo', '4m4deo', 'online', 'cisco']];\nconsole.log(DataManager.getFriends(\"Delmer\"));","map":{"version":3,"sources":["/home/david-bernal/Documentos/LearningTypescript/ReactApps/conversations/src/components/DataManager.tsx"],"names":["DataManager","checkCredentials","user","pwd","valid","data","forEach","u","toLowerCase","getFriends","userName","map","friends","Array","split","friend","push","name","status","filter","e","logIn","console","log"],"mappings":"AAAA;;AACA;AACA;AACA;AACA,eAAe,MAAMA,WAAN,CAAkB;AAU7B;AACJ;AACA;AACA;AACA;AACA;AAC2B,SAAhBC,gBAAgB,CAACC,IAAD,EAAeC,GAAf,EAA4B;AAC/C,QAAIC,KAAK,GAAG,KAAZ;AAEA,SAAKC,IAAL,CAAUC,OAAV,CAAkBC,CAAC,IAAI;AACnB,UAAIA,CAAC,CAAC,CAAD,CAAD,CAAKC,WAAL,OAAuBN,IAAI,CAACM,WAAL,EAAvB,IACJD,CAAC,CAAC,CAAD,CAAD,KAASJ,GADT,EACc;AACVC,QAAAA,KAAK,GAAG,IAAR;AACA;AACH;AACJ,KAND;AAQA,WAAOA,KAAP;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACqB,SAAVK,UAAU,CAACC,QAAD,EAAmB;AAChC,WAAO,KAAKL,IAAL,CAAUM,GAAV,CAAcT,IAAI,IAAI;AACzB;AACA,UAAIA,IAAI,CAAC,CAAD,CAAJ,KAAYQ,QAAhB,EAA0B;AACtB;AACA,YAAIE,OAAO,GAAGC,KAAK,CAAC,CAAD,CAAnB;AACAX,QAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQY,KAAR,CAAc,GAAd,EAAmBH,GAAnB,CAAwBI,MAAM,IAAI;AAC9B,eAAKV,IAAL,CAAUM,GAAV,CAAcJ,CAAC,IAAI;AACf,gBAAIA,CAAC,CAAC,CAAD,CAAD,CAAKC,WAAL,OAAuBO,MAA3B,EAAmC;AAC/BH,cAAAA,OAAO,CAACI,IAAR,CAAa;AAACC,gBAAAA,IAAI,EAAEF,MAAP;AAAeG,gBAAAA,MAAM,EAAEX,CAAC,CAAC,CAAD;AAAxB,eAAb;AACA;AACH;AACJ,WALD;AAMH,SAPD;AAQA,eAAOK,OAAP;AACH;AACJ,KAfM,EAeJO,MAfI,CAeGC,CAAC,IAAI;AACX,aAAOA,CAAC,IAAI,IAAZ;AACH,KAjBM,EAiBJ,CAjBI,CAAP;AAkBH;;AAEW,SAALC,KAAK,CAACX,QAAD,EAAmB;AAC3B,SAAKL,IAAL,CAAUM,GAAV,CAAcT,IAAI,IAAI;AAClB,UAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQM,WAAR,OAA0BE,QAAQ,CAACF,WAAT,EAA9B,EAAsD;AAClDN,QAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,QAAV;AACA;AACH;AACJ,KALD;AAMH;AAED;AACJ;AACA;AACI;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;AAhF6B;AAAZF,W,CAEVK,I,GAA6B,CAChC,CAAE,QAAF,EAAY,QAAZ,EAAsB,SAAtB,EAAiC,sBAAjC,CADgC,EAEhC,CAAE,YAAF,EAAgB,QAAhB,EAA0B,QAA1B,EAAoC,YAApC,CAFgC,EAGhC,CAAE,KAAF,EAAS,KAAT,EAAgB,SAAhB,EAA2B,yBAA3B,CAHgC,EAIhC,CAAE,OAAF,EAAW,OAAX,EAAoB,SAApB,EAA+B,mBAA/B,CAJgC,EAKhC,CAAE,QAAF,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,OAAhC,CALgC,C;AAkFxCiB,OAAO,CAACC,GAAR,CAAYvB,WAAW,CAACS,UAAZ,CAAuB,QAAvB,CAAZ","sourcesContent":["/* eslint-disable array-callback-return */\n/**\n * Clase para leer y escribir datos en los archivos de usuario.\n */\nexport default class DataManager {\n\n    static data: Array<Array<string>> = [\n        [ 'Delmer', 'delm3r', 'offline', 'candelario,leo,cisco' ],\n        [ 'Candelario', 'c4ndel', 'online', 'delmer,leo' ],\n        [ 'Leo', 'le0', 'offline', 'delmer,candelario,cisco' ],\n        [ 'Cisco', 'c1sc0', 'offline', 'decmer,leo,amadeo' ],\n        [ 'Amadeo', '4m4deo', 'online', 'cisco' ]\n    ];\n\n    /**\n     * Comprueba que una pareja de datos usuario-contrase침a exista\n     * y sea v치lida.\n     * @param user \n     * @param pwd \n     */\n    static checkCredentials(user: string, pwd: string) {\n        let valid = false\n        \n        this.data.forEach(u => {\n            if (u[0].toLowerCase() === user.toLowerCase() && \n            u[1] === pwd) {\n                valid = true\n                return\n            }\n        })\n\n        return valid\n    }\n\n    /**\n     * Devuelve un array con todos los amigos y sus estados.\n     * \n     * @param userName \n     */\n    static getFriends(userName: string) {\n        return this.data.map(user => {\n            // Si encontramos el usuario\n            if (user[0] === userName) {\n                // Extraemos sus amigos\n                let friends = Array(0)\n                user[3].split(',').map( friend => {\n                    this.data.map(u => {\n                        if (u[0].toLowerCase() === friend) {\n                            friends.push({name: friend, status: u[2]})\n                            return\n                        }\n                    })\n                })\n                return friends\n            }\n        }).filter(e => {\n            return e != null\n        })[0]\n    }\n\n    static logIn(userName: string) {\n        this.data.map(user => {\n            if (user[0].toLowerCase() === userName.toLowerCase()) {\n                user[2] = \"online\"\n                return\n            }\n        })\n    }\n\n    /**\n     * Carga todos los datos disponibles\n     */\n    // static loadAll() {\n    //     let temp = new Array(0)\n\n    //     fs.readFileSync('../data/users.txt', 'utf-8')\n    //     .split(\"\\n\")\n    //     .map((line:any) => {\n    //         temp.push(line.split(\";\"))\n    //     })\n\n    //     console.log(temp)\n\n    //     return temp\n    // }\n\n}\n\nconsole.log(DataManager.getFriends(\"Delmer\"))"]},"metadata":{},"sourceType":"module"}