{"ast":null,"code":"import*as React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function MessageHolder(props){var msgs=[];// Por cada mensaje que haya se crea una ROW de la tabla de mensajes.\n// La variables messages contiene todas estas rows\nif(props.friend===\"Bienvenido a ReacTalk\"){msgs=[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{className:\"user-message\",children:\"Haz click en alg\\xFAn amigo conectado\"})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{className:\"user-message\",children:\"Y comienza a hablar!\"})]})];}else if(props.messages!==undefined){// eslint-disable-next-line array-callback-return\nprops.messages.map(function(msg){if(msg.sender.toLowerCase()===props.user.toLowerCase()){msgs.push(/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{className:\"user-message\",children:msg.text})]}));}else{msgs.push(/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"friend-message\",children:msg.text}),/*#__PURE__*/_jsx(\"td\",{})]}));}});}return/*#__PURE__*/_jsx(\"div\",{className:\"Message-holder\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"th\",{className:\"chat-friend-name\",colSpan:2,children:props.friend})})}),/*#__PURE__*/_jsx(\"tbody\",{children:msgs.length!==0?msgs.map(function(msg){return msg;}):/*#__PURE__*/_jsx(_Fragment,{})})]})});}","map":{"version":3,"sources":["/home/david-bernal/Documentos/ReacTalk/src/components/MessageHolder.tsx"],"names":["React","MessageHolder","props","msgs","friend","messages","undefined","map","msg","sender","toLowerCase","user","push","text","length"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,C,6IAEA,cAAe,SAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAAmC,CAChD,GAAIC,CAAAA,IAAwB,CAAG,EAA/B,CAEA;AACA;AACA,GAAID,KAAK,CAACE,MAAN,GAAiB,uBAArB,CAA8C,CAC5CD,IAAI,CAAG,cACL,mCACE,aADF,cAEE,WAAI,SAAS,CAAC,cAAd,mDAFF,GADK,cAKL,mCACE,aADF,cAEE,WAAI,SAAS,CAAC,cAAd,kCAFF,GALK,CAAP,CAUD,CAXD,IAWO,IAAID,KAAK,CAACG,QAAN,GAAmBC,SAAvB,CAAkC,CACvC;AACAJ,KAAK,CAACG,QAAN,CAAeE,GAAf,CAAmB,SAACC,GAAD,CAA2C,CAC5D,GAAIA,GAAG,CAACC,MAAJ,CAAWC,WAAX,KAA6BR,KAAK,CAACS,IAAN,CAAWD,WAAX,EAAjC,CAA2D,CACzDP,IAAI,CAACS,IAAL,cACE,mCACE,aADF,cAEE,WAAI,SAAS,CAAC,cAAd,UAA8BJ,GAAG,CAACK,IAAlC,EAFF,GADF,EAMD,CAPD,IAOO,CACLV,IAAI,CAACS,IAAL,cACE,mCACE,WAAI,SAAS,CAAC,gBAAd,UAAgCJ,GAAG,CAACK,IAApC,EADF,cAEE,aAFF,GADF,EAMD,CACF,CAhBD,EAiBD,CACD,mBACE,YAAK,SAAS,CAAC,gBAAf,uBACE,sCACE,oCACE,iCACE,WAAI,SAAS,CAAC,kBAAd,CAAiC,OAAO,CAAE,CAA1C,UACGX,KAAK,CAACE,MADT,EADF,EADF,EADF,cAQE,uBACGD,IAAI,CAACW,MAAL,GAAgB,CAAhB,CACCX,IAAI,CAACI,GAAL,CAAS,SAACC,GAAD,CAAS,CAChB,MAAOA,CAAAA,GAAP,CACD,CAFD,CADD,cAKC,kBANJ,EARF,GADF,EADF,CAsBD","sourcesContent":["import * as React from \"react\";\n\nexport default function MessageHolder(props: any) {\n  let msgs: Array<JSX.Element> = [];\n\n  // Por cada mensaje que haya se crea una ROW de la tabla de mensajes.\n  // La variables messages contiene todas estas rows\n  if (props.friend === \"Bienvenido a ReacTalk\") {\n    msgs = [\n      <tr>\n        <td></td>\n        <td className=\"user-message\">Haz click en alg√∫n amigo conectado</td>\n      </tr>,\n      <tr>\n        <td></td>\n        <td className=\"user-message\">Y comienza a hablar!</td>\n      </tr>,\n    ];\n  } else if (props.messages !== undefined) {\n    // eslint-disable-next-line array-callback-return\n    props.messages.map((msg: { sender: string; text: string }) => {\n      if (msg.sender.toLowerCase() === props.user.toLowerCase()) {\n        msgs.push(\n          <tr>\n            <td></td>\n            <td className=\"user-message\">{msg.text}</td>\n          </tr>\n        );\n      } else {\n        msgs.push(\n          <tr>\n            <td className=\"friend-message\">{msg.text}</td>\n            <td></td>\n          </tr>\n        );\n      }\n    });\n  }\n  return (\n    <div className=\"Message-holder\">\n      <table>\n        <thead>\n          <tr>\n            <th className=\"chat-friend-name\" colSpan={2}>\n              {props.friend}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {msgs.length !== 0 ? (\n            msgs.map((msg) => {\n              return msg;\n            })\n          ) : (\n            <></>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}