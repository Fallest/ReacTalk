{"ast":null,"code":"var _jsxFileName = \"/home/david-bernal/Documentos/LearningTypescript/ReactApps/conversations/src/components/FriendList.tsx\";\nimport * as React from 'react';\n/**\n * Muestra la lista de amigos.\n * @param props \n * @returns \n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FriendList(props) {\n  const drawFriendList = async () => {\n    /*#__PURE__*/\n    _jsxDEV(\"ol\", {\n      children: props.friends.map(friend => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [friend.name, \" : \", friend.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this);\n  };\n\n  return drawFriendList().then(result => result).catch(exception => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"An error ocurred\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 29\n  }, this));\n}\n_c = FriendList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["/home/david-bernal/Documentos/LearningTypescript/ReactApps/conversations/src/components/FriendList.tsx"],"names":["React","FriendList","props","drawFriendList","friends","map","friend","name","status","then","result","catch","exception"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAAgC;AAC3C,QAAMC,cAAc,GAAG,YAAY;AAC/B;AAAA;AAAA,gBAEID,KAAK,CAACE,OAAN,CAAcC,GAAd,CAAmBC,MAAD,iBACd;AAAA,mBAAKA,MAAM,CAACC,IAAZ,SAAqBD,MAAM,CAACE,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAFJ;AAAA;AAAA;AAAA;AAAA;AAOH,GARD;;AAUA,SACIL,cAAc,GACbM,IADD,CACMC,MAAM,IAAIA,MADhB,EAECC,KAFD,CAEOC,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFpB,CADJ;AAKH;KAhBuBX,U","sourcesContent":["import * as React from 'react'\n\n/**\n * Muestra la lista de amigos.\n * @param props \n * @returns \n */\n\nexport default function FriendList(props: any) {\n    const drawFriendList = async () => {\n        <ol>\n        {\n            props.friends.map((friend: {name: string; status: string}) => (\n                <li>{friend.name} : {friend.status}</li>\n                )\n        )}\n        </ol>\n    }\n    \n    return (\n        drawFriendList()\n        .then(result => result)\n        .catch(exception => <div>An error ocurred</div>)\n    )\n}"]},"metadata":{},"sourceType":"module"}