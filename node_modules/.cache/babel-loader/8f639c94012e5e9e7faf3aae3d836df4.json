{"ast":null,"code":"var _jsxFileName = \"/home/david-bernal/Documentos/LearningTypescript/ReactApps/conversations/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport './styles/App.css';\nimport * as React from 'react';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const UserAuthContext = /*#__PURE__*/React.createContext('false');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Conversations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserAuthContext.Provider, {\n        value: \"false\",\n        children: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n/**\n * Componente raíz para la página de inicio de sesión.\n * Tiene dos secciones, una para el formulario y otra para el resto de elementos decorativos.\n */\n\n\n_c = App;\n\nclass LoginPage extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login-page\",\n      children: [/*#__PURE__*/_jsxDEV(LoginDeco, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n/**\n* Componente para el formulario de inicio de sesión.\n* Está compuesto de dos áreas de texto y un botón.\n* Cuando se presione el botón se realizará un intento de inicio de sesión:\n*  -Se recogerán los datos de los campos de texto.\n*  -Se contrastarán con los usuarios guardados.\n*      >Si el usuario no existe: Error.\n*      >Si el usuario existe pero está online: Error:\n*      >Si el usuario existe y está offline: Iniciar sesión.\n*/\n\n\nfunction LoginForm(props) {\n  _s();\n\n  const [user, setUser] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n  const loggedIn = useContext(UserAuthContext);\n\n  const tryLogin = () => {// Comparamos los datos introducidos con los datos en el archivo\n  };\n\n  const performValidation = () => {\n    return user.length > 0 && pwd.length > 0;\n  };\n\n  const handleUserChange = event => {\n    setUser(event.target.value);\n  };\n\n  const handlePwdChange = event => {\n    setPwd(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: tryLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"User \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleUserChange,\n        value: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: handlePwdChange,\n        value: pwd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Log in\",\n        disabled: !performValidation()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n}\n\n_s(LoginForm, \"xPlUo13tJ3RDeGM//kYslzTXUik=\");\n\n_c2 = LoginForm;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"LoginForm\");","map":{"version":3,"sources":["/home/david-bernal/Documentos/LearningTypescript/ReactApps/conversations/src/App.tsx"],"names":["React","Component","App","UserAuthContext","createContext","LoginPage","render","LoginForm","props","user","setUser","useState","pwd","setPwd","loggedIn","useContext","tryLogin","performValidation","length","handleUserChange","event","target","value","handlePwdChange"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAIA,SAASC,GAAT,GAAe;AACb,QAAMC,eAAe,gBAAGH,KAAK,CAACI,aAAN,CAAoB,OAApB,CAAxB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,QAAA,KAAK,EAAC,OAAhC;AAAA,+BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;AAGD;AACA;AACA;AACA;;;KAnBSF,G;;AAoBR,MAAMG,SAAN,SAAwBJ,SAAxB,CAAkC;AACjCK,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AARgC;AAYnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA+B;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBF,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAMG,QAAQ,GAAGC,UAAU,CAACZ,eAAD,CAA3B;;AAGA,QAAMa,QAAQ,GAAG,MAAM,CACnB;AAEH,GAHD;;AAKA,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,WAAOR,IAAI,CAACS,MAAL,GAAc,CAAd,IAAmBN,GAAG,CAACM,MAAJ,GAAa,CAAvC;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAIC,KAAD,IAAgB;AACrCV,IAAAA,OAAO,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAIH,KAAD,IAAgB;AACpCP,IAAAA,MAAM,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAN;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEN,QAAhB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAEG,gBAA7B;AACA,QAAA,KAAK,EAAEV;AADP;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAEc,eAAjC;AACA,QAAA,KAAK,EAAEX;AADP;AAAA;AAAA;AAAA;AAAA,cANJ,eAQI;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAoC,QAAA,QAAQ,EAAE,CAACK,iBAAiB;AAAhE;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeD;;GAtCQV,S;;MAAAA,S;AAwCT,eAAeL,GAAf","sourcesContent":["import './styles/App.css';\nimport * as React from 'react';\nimport { Component } from 'react';\n\n\n\nfunction App() {\n  const UserAuthContext = React.createContext('false')\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>Conversations</p>\n        <UserAuthContext.Provider value=\"false\">\n          <LoginPage></LoginPage>\n        </UserAuthContext.Provider>\n      </header>\n    </div>\n  );\n}\n\n\n/**\n * Componente raíz para la página de inicio de sesión.\n * Tiene dos secciones, una para el formulario y otra para el resto de elementos decorativos.\n */\n class LoginPage extends Component {\n  render() {\n      return (\n          <div className=\"Login-page\">\n              <LoginDeco></LoginDeco>\n              <LoginForm></LoginForm>\n          </div>\n      )\n  }\n}\n\n\n/**\n* Componente para el formulario de inicio de sesión.\n* Está compuesto de dos áreas de texto y un botón.\n* Cuando se presione el botón se realizará un intento de inicio de sesión:\n*  -Se recogerán los datos de los campos de texto.\n*  -Se contrastarán con los usuarios guardados.\n*      >Si el usuario no existe: Error.\n*      >Si el usuario existe pero está online: Error:\n*      >Si el usuario existe y está offline: Iniciar sesión.\n*/\nfunction LoginForm(props: any) {\n  const [user, setUser] = useState(\"\")\n  const [pwd, setPwd] = useState(\"\")\n  const loggedIn = useContext(UserAuthContext)\n  \n\n  const tryLogin = () => {\n      // Comparamos los datos introducidos con los datos en el archivo\n      \n  }\n  \n  const performValidation = () => {\n      return user.length > 0 && pwd.length > 0\n  }\n\n  const handleUserChange = (event: any) => {\n      setUser(event.target.value)\n  }\n\n  const handlePwdChange = (event: any) => {\n      setPwd(event.target.value)\n  }\n\n  return(\n      <div className=\"Login-form\">\n          <form onSubmit={tryLogin}>\n              <label>User </label>\n              <input type=\"text\" onChange={handleUserChange} \n              value={user} />\n              <br />\n              <label>Password </label>\n              <input type=\"password\" onChange={handlePwdChange}\n              value={pwd} />\n              <br />\n              <input type=\"submit\" value=\"Log in\" disabled={!performValidation()}/>\n          </form>\n      </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}