{"ast":null,"code":"var _jsxFileName = \"/home/david-bernal/Documentos/ReacTalk/src/components/MessageSender.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\n/**\n * Envía los mensajes a ChatPanel.\n * @param props\n * @returns\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MessageSender(props) {\n  _s();\n\n  const [msgText, setMsgText] = useState(\"\");\n\n  function handleSubmit(event) {\n    if (msgText !== \"\" && msgText.trim() !== \"\") {\n      if (props.presMsgs !== undefined) {\n        props.addMessage([...props.prevMsgs, {\n          sender: props.user,\n          text: msgText\n        }]);\n        console.log(\"Hay mensajes anteriores: \" + props.prevMsgs);\n      } else {\n        props.addMessage([{\n          sender: props.user,\n          text: msgText\n        }]);\n        console.log(\"No hay mensajes anteriores: \" + msgtext);\n      }\n\n      setMsgText(\"\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Message-sender\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"msg-box\",\n      value: msgText,\n      onChange: e => setMsgText(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" ? handleSubmit(e) : undefined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      className: \"send-button\",\n      onClick: handleSubmit,\n      value: \">\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MessageSender, \"YgZwYxOSPDhmQTFoAg0Cd+WmhW4=\");\n\n_c = MessageSender;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageSender\");","map":{"version":3,"sources":["/home/david-bernal/Documentos/ReacTalk/src/components/MessageSender.tsx"],"names":["React","useState","MessageSender","props","msgText","setMsgText","handleSubmit","event","trim","presMsgs","undefined","addMessage","prevMsgs","sender","user","text","console","log","msgtext","e","target","value","key"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAAmC;AAAA;;AAChD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;;AAEA,WAASK,YAAT,CAAsBC,KAAtB,EAAkC;AAChC,QAAIH,OAAO,KAAK,EAAZ,IAAkBA,OAAO,CAACI,IAAR,OAAmB,EAAzC,EAA6C;AAC3C,UAAIL,KAAK,CAACM,QAAN,KAAmBC,SAAvB,EAAkC;AAChCP,QAAAA,KAAK,CAACQ,UAAN,CAAiB,CACf,GAAGR,KAAK,CAACS,QADM,EAEf;AAAEC,UAAAA,MAAM,EAAEV,KAAK,CAACW,IAAhB;AAAsBC,UAAAA,IAAI,EAAEX;AAA5B,SAFe,CAAjB;AAIAY,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8Bd,KAAK,CAACS,QAAhD;AACD,OAND,MAMO;AACLT,QAAAA,KAAK,CAACQ,UAAN,CAAiB,CAAC;AAAEE,UAAAA,MAAM,EAAEV,KAAK,CAACW,IAAhB;AAAsBC,UAAAA,IAAI,EAAEX;AAA5B,SAAD,CAAjB;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCC,OAA7C;AACD;;AACDb,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,SAFZ;AAGE,MAAA,KAAK,EAAED,OAHT;AAIE,MAAA,QAAQ,EAAGe,CAAD,IAAOd,UAAU,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ7B;AAKE,MAAA,SAAS,EAAGF,CAAD,IAAQA,CAAC,CAACG,GAAF,KAAU,OAAV,GAAoBhB,YAAY,CAACa,CAAD,CAAhC,GAAsCT;AAL3D;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,aAFZ;AAGE,MAAA,OAAO,EAAEJ,YAHX;AAIE,MAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GApCuBJ,a;;KAAAA,a","sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\n\n/**\n * Envía los mensajes a ChatPanel.\n * @param props\n * @returns\n */\nexport default function MessageSender(props: any) {\n  const [msgText, setMsgText] = useState(\"\");\n\n  function handleSubmit(event: any) {\n    if (msgText !== \"\" && msgText.trim() !== \"\") {\n      if (props.presMsgs !== undefined) {\n        props.addMessage([\n          ...props.prevMsgs,\n          { sender: props.user, text: msgText },\n        ]);\n        console.log(\"Hay mensajes anteriores: \" + props.prevMsgs);\n      } else {\n        props.addMessage([{ sender: props.user, text: msgText }]);\n        console.log(\"No hay mensajes anteriores: \" + msgtext);\n      }\n      setMsgText(\"\");\n    }\n  }\n\n  return (\n    <div className=\"Message-sender\">\n      <input\n        type=\"text\"\n        className=\"msg-box\"\n        value={msgText}\n        onChange={(e) => setMsgText(e.target.value)}\n        onKeyDown={(e) => (e.key === \"Enter\" ? handleSubmit(e) : undefined)}\n      />\n      <input\n        type=\"submit\"\n        className=\"send-button\"\n        onClick={handleSubmit}\n        value=\">\"\n      ></input>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}