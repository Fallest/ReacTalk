{"ast":null,"code":"import _classCallCheck from\"/home/david-bernal/Documentos/ReacTalk/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/david-bernal/Documentos/ReacTalk/node_modules/@babel/runtime/helpers/esm/createClass.js\";/* eslint-disable array-callback-return */ /**\n * Clase para leer y escribir datos en los archivos de usuario.\n */var DataManager=/*#__PURE__*/function(){function DataManager(){_classCallCheck(this,DataManager);}_createClass(DataManager,null,[{key:\"checkCredentials\",value:/**\n   * Comprueba que una pareja de datos usuario-contrase침a exista\n   * y sea v치lida.\n   * @param user\n   * @param pwd\n   */function checkCredentials(user,pwd){var valid=false;this.data.forEach(function(u){if(u[0].toLowerCase()===user.toLowerCase()&&u[1]===pwd){valid=true;return;}});return valid;}/**\n   * Devuelve un array con todos los amigos y sus estados.\n   *\n   * @param userName\n   */},{key:\"getFriends\",value:function getFriends(userName){var _this=this;return this.data.map(function(user){// Si encontramos el usuario\nif(user[0]===userName){// Extraemos sus amigos\nvar friends=Array(0);user[3].split(\",\").map(function(friend){_this.data.map(function(u){if(u[0].toLowerCase()===friend){friends.push({name:friend[0].toUpperCase()+friend.substring(1),status:u[2]});return;}});});return friends;}}).filter(function(e){return e!=null;})[0];}},{key:\"logIn\",value:function logIn(userName){this.data.map(function(user){if(user[0].toLowerCase()===userName.toLowerCase()){user[2]=\"online\";return;}});}/**\n   * Carga todos los datos disponibles\n   */ // static loadAll() {\n//     let temp = new Array(0)\n//     fs.readFileSync('../data/users.txt', 'utf-8')\n//     .split(\"\\n\")\n//     .map((line:any) => {\n//         temp.push(line.split(\";\"))\n//     })\n//     console.log(temp)\n//     return temp\n// }\n}]);return DataManager;}();DataManager.data=[[\"Delmer\",\"delm3r\",\"offline\",\"candelario,leo,cisco\"],[\"Candelario\",\"c4ndel\",\"online\",\"delmer,leo\"],[\"Leo\",\"le0\",\"offline\",\"delmer,candelario,cisco\"],[\"Cisco\",\"c1sc0\",\"online\",\"decmer,leo,amadeo\"],[\"Amadeo\",\"4m4deo\",\"online\",\"cisco\"]];export{DataManager as default};console.log(DataManager.getFriends(\"Delmer\"));","map":{"version":3,"sources":["/home/david-bernal/Documentos/ReacTalk/src/components/DataManager.tsx"],"names":["DataManager","user","pwd","valid","data","forEach","u","toLowerCase","userName","map","friends","Array","split","friend","push","name","toUpperCase","substring","status","filter","e","console","log","getFriends"],"mappings":"sPAAA,0C,CACA;AACA;AACA,G,GACqBA,CAAAA,W,gJASnB;AACF;AACA;AACA;AACA;AACA,KACE,0BAAwBC,IAAxB,CAAsCC,GAAtC,CAAmD,CACjD,GAAIC,CAAAA,KAAK,CAAG,KAAZ,CAEA,KAAKC,IAAL,CAAUC,OAAV,CAAkB,SAACC,CAAD,CAAO,CACvB,GAAIA,CAAC,CAAC,CAAD,CAAD,CAAKC,WAAL,KAAuBN,IAAI,CAACM,WAAL,EAAvB,EAA6CD,CAAC,CAAC,CAAD,CAAD,GAASJ,GAA1D,CAA+D,CAC7DC,KAAK,CAAG,IAAR,CACA,OACD,CACF,CALD,EAOA,MAAOA,CAAAA,KAAP,CACD,CAED;AACF;AACA;AACA;AACA,K,0BACE,oBAAkBK,QAAlB,CAAoC,gBAClC,MAAO,MAAKJ,IAAL,CACJK,GADI,CACA,SAACR,IAAD,CAAU,CACb;AACA,GAAIA,IAAI,CAAC,CAAD,CAAJ,GAAYO,QAAhB,CAA0B,CACxB;AACA,GAAIE,CAAAA,OAAO,CAAGC,KAAK,CAAC,CAAD,CAAnB,CACAV,IAAI,CAAC,CAAD,CAAJ,CAAQW,KAAR,CAAc,GAAd,EAAmBH,GAAnB,CAAuB,SAACI,MAAD,CAAoB,CACzC,KAAI,CAACT,IAAL,CAAUK,GAAV,CAAc,SAACH,CAAD,CAAO,CACnB,GAAIA,CAAC,CAAC,CAAD,CAAD,CAAKC,WAAL,KAAuBM,MAA3B,CAAmC,CACjCH,OAAO,CAACI,IAAR,CAAa,CACXC,IAAI,CAAEF,MAAM,CAAC,CAAD,CAAN,CAAUG,WAAV,GAA0BH,MAAM,CAACI,SAAP,CAAiB,CAAjB,CADrB,CAEXC,MAAM,CAAEZ,CAAC,CAAC,CAAD,CAFE,CAAb,EAIA,OACD,CACF,CARD,EASD,CAVD,EAWA,MAAOI,CAAAA,OAAP,CACD,CACF,CAnBI,EAoBJS,MApBI,CAoBG,SAACC,CAAD,CAAO,CACb,MAAOA,CAAAA,CAAC,EAAI,IAAZ,CACD,CAtBI,EAsBF,CAtBE,CAAP,CAuBD,C,qBAED,eAAaZ,QAAb,CAA+B,CAC7B,KAAKJ,IAAL,CAAUK,GAAV,CAAc,SAACR,IAAD,CAAU,CACtB,GAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQM,WAAR,KAA0BC,QAAQ,CAACD,WAAT,EAA9B,CAAsD,CACpDN,IAAI,CAAC,CAAD,CAAJ,CAAU,QAAV,CACA,OACD,CACF,CALD,EAMD,CAED;AACF;AACA,K,CACE;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;2BAnFmBD,W,CACZI,I,CAA6B,CAClC,CAAC,QAAD,CAAW,QAAX,CAAqB,SAArB,CAAgC,sBAAhC,CADkC,CAElC,CAAC,YAAD,CAAe,QAAf,CAAyB,QAAzB,CAAmC,YAAnC,CAFkC,CAGlC,CAAC,KAAD,CAAQ,KAAR,CAAe,SAAf,CAA0B,yBAA1B,CAHkC,CAIlC,CAAC,OAAD,CAAU,OAAV,CAAmB,QAAnB,CAA6B,mBAA7B,CAJkC,CAKlC,CAAC,QAAD,CAAW,QAAX,CAAqB,QAArB,CAA+B,OAA/B,CALkC,C,QADjBJ,W,aAsFrBqB,OAAO,CAACC,GAAR,CAAYtB,WAAW,CAACuB,UAAZ,CAAuB,QAAvB,CAAZ","sourcesContent":["/* eslint-disable array-callback-return */\n/**\n * Clase para leer y escribir datos en los archivos de usuario.\n */\nexport default class DataManager {\n  static data: Array<Array<string>> = [\n    [\"Delmer\", \"delm3r\", \"offline\", \"candelario,leo,cisco\"],\n    [\"Candelario\", \"c4ndel\", \"online\", \"delmer,leo\"],\n    [\"Leo\", \"le0\", \"offline\", \"delmer,candelario,cisco\"],\n    [\"Cisco\", \"c1sc0\", \"online\", \"decmer,leo,amadeo\"],\n    [\"Amadeo\", \"4m4deo\", \"online\", \"cisco\"],\n  ];\n\n  /**\n   * Comprueba que una pareja de datos usuario-contrase침a exista\n   * y sea v치lida.\n   * @param user\n   * @param pwd\n   */\n  static checkCredentials(user: string, pwd: string) {\n    let valid = false;\n\n    this.data.forEach((u) => {\n      if (u[0].toLowerCase() === user.toLowerCase() && u[1] === pwd) {\n        valid = true;\n        return;\n      }\n    });\n\n    return valid;\n  }\n\n  /**\n   * Devuelve un array con todos los amigos y sus estados.\n   *\n   * @param userName\n   */\n  static getFriends(userName: string) {\n    return this.data\n      .map((user) => {\n        // Si encontramos el usuario\n        if (user[0] === userName) {\n          // Extraemos sus amigos\n          let friends = Array(0);\n          user[3].split(\",\").map((friend: string) => {\n            this.data.map((u) => {\n              if (u[0].toLowerCase() === friend) {\n                friends.push({\n                  name: friend[0].toUpperCase() + friend.substring(1),\n                  status: u[2],\n                });\n                return;\n              }\n            });\n          });\n          return friends;\n        }\n      })\n      .filter((e) => {\n        return e != null;\n      })[0];\n  }\n\n  static logIn(userName: string) {\n    this.data.map((user) => {\n      if (user[0].toLowerCase() === userName.toLowerCase()) {\n        user[2] = \"online\";\n        return;\n      }\n    });\n  }\n\n  /**\n   * Carga todos los datos disponibles\n   */\n  // static loadAll() {\n  //     let temp = new Array(0)\n\n  //     fs.readFileSync('../data/users.txt', 'utf-8')\n  //     .split(\"\\n\")\n  //     .map((line:any) => {\n  //         temp.push(line.split(\";\"))\n  //     })\n\n  //     console.log(temp)\n\n  //     return temp\n  // }\n}\n\nconsole.log(DataManager.getFriends(\"Delmer\"));\n"]},"metadata":{},"sourceType":"module"}