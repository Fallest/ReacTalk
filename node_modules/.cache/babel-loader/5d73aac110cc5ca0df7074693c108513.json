{"ast":null,"code":"var _jsxFileName = \"/home/david-bernal/Documentos/LearningTypescript/ReactApps/conversations/src/components/AddFriend.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\n/**\n * Este componente se usará para buscar un usuario, y si existe,\n * lo añadirá como amigo del usuario actual.\n * @param props \n * @returns \n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddFriend(props) {\n  _s();\n\n  const [userToFind, setUserToFind] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: findUser,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"A\\xF1adir amigo: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleTextChange,\n      value: userToFind\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddFriend, \"jNLVIcvh0cq/gQ2R8gXmPGy5gZ0=\");\n\n_c = AddFriend;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddFriend\");","map":{"version":3,"sources":["/home/david-bernal/Documentos/LearningTypescript/ReactApps/conversations/src/components/AddFriend.tsx"],"names":["React","AddFriend","props","userToFind","setUserToFind","useState","findUser","handleTextChange"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,SAAT,CAAoBC,KAApB,EAAgC;AAAA;;AAC3C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BC,QAAQ,CAAC,EAAD,CAA5C;AAEA,sBACI;AAAM,IAAA,QAAQ,EAAEC,QAAhB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEC,gBAA7B;AACA,MAAA,KAAK,EAAEJ;AADP;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAVuBF,S;;KAAAA,S","sourcesContent":["import * as React from 'react';\n\n/**\n * Este componente se usará para buscar un usuario, y si existe,\n * lo añadirá como amigo del usuario actual.\n * @param props \n * @returns \n */\n\nexport default function AddFriend (props: any) {\n    const [userToFind, setUserToFind] = useState(\"\");\n\n    return (\n        <form onSubmit={findUser}>\n            <label>Añadir amigo: </label>\n            <input type=\"text\" onChange={handleTextChange}\n            value={userToFind}/>\n        </form>\n    );\n}"]},"metadata":{},"sourceType":"module"}