{"ast":null,"code":"var _jsxFileName = \"/home/david-bernal/Documentos/LearningTypescript/ReactApps/conversations/src/components/MainPage.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport Conversations from './Conversations'; // import '../styles/LoginPage.css'\n\n/**\n * Componente raíz para la página.\n * Aquí se renderizarán tanto el inicio de sesión como el chat.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainPage(props) {\n  _s();\n\n  // Estado de autenticación\n  const [userAuth, setUserAuth] = useState('false'); // Referencia del JSX a renderizar\n\n  const canvas = useRef( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login-page\",\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this));\n\n  function updateCanvas() {\n    if (userAuth) {\n      canvas.current = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Conversation-page\",\n        children: /*#__PURE__*/_jsxDEV(Conversations, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  useEffect(updateCanvas, [userAuth]);\n  return canvas;\n}\n/**\n * Componente para el formulario de inicio de sesión.\n * Está compuesto de dos áreas de texto y un botón.\n * Cuando se presione el botón se realizará un intento de inicio de sesión:\n *  -Se recogerán los datos de los campos de texto.\n *  -Se contrastarán con los usuarios guardados.\n *      >Si el usuario no existe: Error.\n *      >Si el usuario existe pero está online: Error:\n *      >Si el usuario existe y está offline: Iniciar sesión.\n */\n\n\n_s(MainPage, \"dzCRY0mSw2gZyKONbNHKaTVLoPk=\");\n\n_c = MainPage;\n\nfunction LoginForm(props) {\n  _s2();\n\n  const [user, setUser] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n\n  const tryLogin = () => {// Comparamos los datos introducidos con los datos en el archivo\n    //if (user === \"admin\" && pwd === \"admin\")\n  };\n\n  const performValidation = () => {\n    return user.length > 0 && pwd.length > 0;\n  };\n\n  const handleUserChange = event => {\n    setUser(event.target.value);\n  };\n\n  const handlePwdChange = event => {\n    setPwd(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: tryLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"User \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleUserChange,\n        value: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: handlePwdChange,\n        value: pwd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Log in\",\n        disabled: !performValidation()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(LoginForm, \"VdVwgvRxVLr1OwtifevSu7GRne0=\");\n\n_c2 = LoginForm;\nexport default MainPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MainPage\");\n$RefreshReg$(_c2, \"LoginForm\");","map":{"version":3,"sources":["/home/david-bernal/Documentos/LearningTypescript/ReactApps/conversations/src/components/MainPage.tsx"],"names":["React","useState","useEffect","useRef","Conversations","MainPage","props","userAuth","setUserAuth","canvas","updateCanvas","current","LoginForm","user","setUser","pwd","setPwd","tryLogin","performValidation","length","handleUserChange","event","target","value","handlePwdChange"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,aAAP,MAA0B,iBAA1B,C,CACA;;AAEA;AACA;AACA;AACA;;;;AACA,SAASC,QAAT,CAAmBC,KAAnB,EAA+B;AAAA;;AAC3B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,OAAD,CAAxC,CAF2B,CAG3B;;AACA,QAAMQ,MAAM,GAAGN,MAAM,eACjB;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADiB,CAArB;;AAMA,WAASO,YAAT,GAAyB;AACrB,QAAIH,QAAJ,EAAc;AACVE,MAAAA,MAAM,CAACE,OAAP,gBACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;AACJ;;AAEDT,EAAAA,SAAS,CAACQ,YAAD,EAAe,CAACH,QAAD,CAAf,CAAT;AAEA,SAAOE,MAAP;AACH;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAnCSJ,Q;;KAAAA,Q;;AAoCR,SAASO,SAAT,CAAmBN,KAAnB,EAA+B;AAAA;;AAC5B,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAC,EAAD,CAA9B;;AAGA,QAAMgB,QAAQ,GAAG,MAAM,CACnB;AACA;AAEH,GAJD;;AAMA,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,WAAOL,IAAI,CAACM,MAAL,GAAc,CAAd,IAAmBJ,GAAG,CAACI,MAAJ,GAAa,CAAvC;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAIC,KAAD,IAAgB;AACrCP,IAAAA,OAAO,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAIH,KAAD,IAAgB;AACpCL,IAAAA,MAAM,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAN;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEN,QAAhB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAEG,gBAA7B;AACA,QAAA,KAAK,EAAEP;AADP;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAEW,eAAjC;AACA,QAAA,KAAK,EAAET;AADP;AAAA;AAAA;AAAA;AAAA,cANJ,eAQI;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAoC,QAAA,QAAQ,EAAE,CAACG,iBAAiB;AAAhE;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;IAtCSN,S;;MAAAA,S;AAwCV,eAAeP,QAAf","sourcesContent":["import * as React from 'react'\nimport { useState, useEffect, useRef } from 'react';\nimport Conversations from './Conversations'\n// import '../styles/LoginPage.css'\n\n/**\n * Componente raíz para la página.\n * Aquí se renderizarán tanto el inicio de sesión como el chat.\n */\nfunction MainPage (props: any) {\n    // Estado de autenticación\n    const [userAuth, setUserAuth] = useState('false');\n    // Referencia del JSX a renderizar\n    const canvas = useRef(\n        <div className=\"Login-page\">\n            <LoginForm />\n        </div>\n    );\n\n    function updateCanvas()  {\n        if (userAuth) {\n            canvas.current = (\n                <div className=\"Conversation-page\">\n                    <Conversations />\n                </div>\n            );\n        }\n    }\n\n    useEffect(updateCanvas, [userAuth])\n\n    return canvas\n}\n\n\n/**\n * Componente para el formulario de inicio de sesión.\n * Está compuesto de dos áreas de texto y un botón.\n * Cuando se presione el botón se realizará un intento de inicio de sesión:\n *  -Se recogerán los datos de los campos de texto.\n *  -Se contrastarán con los usuarios guardados.\n *      >Si el usuario no existe: Error.\n *      >Si el usuario existe pero está online: Error:\n *      >Si el usuario existe y está offline: Iniciar sesión.\n */\n function LoginForm(props: any) {\n    const [user, setUser] = useState(\"\")\n    const [pwd, setPwd] = useState(\"\")\n    \n\n    const tryLogin = () => {\n        // Comparamos los datos introducidos con los datos en el archivo\n        //if (user === \"admin\" && pwd === \"admin\")\n            \n    }\n    \n    const performValidation = () => {\n        return user.length > 0 && pwd.length > 0\n    }\n\n    const handleUserChange = (event: any) => {\n        setUser(event.target.value)\n    }\n\n    const handlePwdChange = (event: any) => {\n        setPwd(event.target.value)\n    }\n\n    return(\n        <div className=\"Login-form\">\n            <form onSubmit={tryLogin}>\n                <label>User </label>\n                <input type=\"text\" onChange={handleUserChange} \n                value={user} />\n                <br />\n                <label>Password </label>\n                <input type=\"password\" onChange={handlePwdChange}\n                value={pwd} />\n                <br />\n                <input type=\"submit\" value=\"Log in\" disabled={!performValidation()}/>\n            </form>\n        </div>\n    )\n}\n\nexport default MainPage"]},"metadata":{},"sourceType":"module"}